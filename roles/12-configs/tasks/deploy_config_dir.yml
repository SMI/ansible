---
- name: Set config_env_dir
  ansible.builtin.set_fact:
    env_config_dir: "{{ smi_configs_configs_dir }}/{{ env_name }}"
    env_logs_dir: "{{ smi_configs_logs_dir }}/{{ env_name }}"

- name: Ensure config dir exists
  become: true
  ansible.builtin.file:
    path: "{{ env_config_dir }}"
    state: directory
    owner: root
    group: root
    mode: u=rwx,g=rx,o=rx

- name: Ensure config logs dir exists
  become: true
  ansible.builtin.file:
    path: "{{ env_logs_dir }}"
    owner: root
    group: "{{ smi_preflight_group_name }}"
    state: directory
    mode: u=rwx,g=rwxs,o=

- name: Read "config_smiservices_version" from env.bash
  ansible.builtin.set_fact:
    config_smiservices_version: "{{
      lookup('ansible.builtin.file', env_path) |
      regex_search('SMI_SMISERVICES_VERSION=\"(.*)\"', '\\1') |
      first }}"
  vars:
    env_path: "{{ smi_configs_local_configs_template_dir }}/{{ env_name }}/env.bash"

- name: Template config files
  become: true
  ansible.builtin.template:
    src: "{{ item }}"
    dest: "{{ env_config_dir }}/{{ item | basename }}"
    mode: u=rw,g=r,o=r
  with_ansible.builtin.fileglob: "{{ smi_configs_local_configs_template_dir }}/{{ env_name }}/*"
  register: config_files
  notify: "service_software : Upload changed RabbitMQ configs"
